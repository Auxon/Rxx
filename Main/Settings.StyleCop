<StyleCopSettings Version="105">
	<GlobalSettings>
		<CollectionProperty Name="RecognizedWords">
			<Value>endianness</Value>
			<Value>enum</Value>
			<Value>parameterless</Value>
			<Value>Look-aheads</Value>
			<Value>cdata</Value>
			<Value>enumerables</Value>
			<Value>enumerable's</Value>
			<!-- Part of the term "ANDed" (http://en.wiktionary.org/wiki/ANDed) -->
			<Value>Ded</Value>
			<Value>combinator</Value>
			<Value>untyped</Value>
			<Value>rc</Value>
		</CollectionProperty>
	</GlobalSettings>
	<Parsers>
		<Parser ParserId="StyleCop.CSharp.CsParser">
			<ParserSettings>
				<BooleanProperty Name="AnalyzeDesignerFiles">False</BooleanProperty>
			</ParserSettings>
		</Parser>
	</Parsers>
	<SourceFileList>
		<SourceFile>ContractExtensions.cs</SourceFile>
		<Settings>
			<GlobalSettings>
				<BooleanProperty Name="RulesEnabledByDefault">False</BooleanProperty>
			</GlobalSettings>
		</Settings>
	</SourceFileList>
	<Analyzers>
		<Analyzer AnalyzerId="StyleCop.CSharp.DocumentationRules">
			<Rules>
				<Rule Name="FileMustHaveHeader">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementsMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PartialElementsMustBeDocumented">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PartialElementDocumentationMustHaveSummaryText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="FileHeaderMustShowCopyright">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ConstructorSummaryDocumentationMustBeginWithStandardText">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.OrderingRules">
			<Rules>
				<Rule Name="UsingDirectivesMustBePlacedWithinNamespace">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementsMustAppearInTheCorrectOrder">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementsMustBeOrderedByAccess">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="StaticElementsMustAppearBeforeInstanceElements">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ProtectedMustComeBeforeInternal">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ConstantsMustAppearBeforeFields">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.ReadabilityRules">
			<Rules>
				<Rule Name="PrefixLocalCallsWithThis">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="PrefixCallsCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.SpacingRules">
			<Rules>
				<Rule Name="TabsMustNotBeUsed">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingParenthesisMustBeSpacedCorrectly">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.LayoutRules">
			<Rules>
				<Rule Name="CurlyBracketsMustNotBeOmitted">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ElementsMustBeSeparatedByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ClosingCurlyBracketMustBeFollowedByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="SingleLineCommentsMustNotBeFollowedByBlankLine">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.MaintainabilityRules">
			<Rules>
				<Rule Name="FileMayOnlyContainASingleClass">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
		<Analyzer AnalyzerId="StyleCop.CSharp.NamingRules">
			<Rules>
				<Rule Name="FieldNamesMustNotUseHungarianNotation">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="ConstFieldNamesMustBeginWithUpperCaseLetter">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
				<Rule Name="StaticReadonlyFieldsMustBeginWithUpperCaseLetter">
					<RuleSettings>
						<BooleanProperty Name="Enabled">False</BooleanProperty>
					</RuleSettings>
				</Rule>
			</Rules>
			<AnalyzerSettings />
		</Analyzer>
	</Analyzers>
</StyleCopSettings>